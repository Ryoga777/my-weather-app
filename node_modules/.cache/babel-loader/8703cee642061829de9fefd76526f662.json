{"remainingRequest":"/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/babel-loader/lib/index.js!/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/src/App.vue","mtime":1590418587979},{"path":"/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/roberto/develop/Javascript/Vue/weather-app/vue-weather/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXBpX2tleTogJzQwMmYzMmUwNDkzNmRmMDBiYTUxOTRjZGExZDlkZmE3JywKICAgICAgdXJsX2Jhc2U6ICdodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvJywKICAgICAgcXVlcnk6ICcnLAogICAgICB3ZWF0aGVyOiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZldGNoV2VhdGhlcjogZnVuY3Rpb24gZmV0Y2hXZWF0aGVyKGUpIHsKICAgICAgaWYgKGUua2V5ID09ICJFbnRlciIpIHsKICAgICAgICBmZXRjaCgiIi5jb25jYXQodGhpcy51cmxfYmFzZSwgIndlYXRoZXI/cT0iKS5jb25jYXQodGhpcy5xdWVyeSwgIiZ1bml0cz1tZXRyaWMmQVBQSUQ9IikuY29uY2F0KHRoaXMuYXBpX2tleSkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgICAgICAgfSkudGhlbih0aGlzLnNldFJlc3VsdHMpOwogICAgICB9CiAgICB9LAogICAgc2V0UmVzdWx0czogZnVuY3Rpb24gc2V0UmVzdWx0cyhyZXN1bHRzKSB7CiAgICAgIHRoaXMud2VhdGhlciA9IHJlc3VsdHM7CiAgICB9LAogICAgLy8gQ29zdHJ1aXNjZSBsYSBkYXRhIG5lbCBmb3JtYXRvICJHaW9ybm8gbi4gTWVzZSBBbm5vIiAoRXNlbXBpbzogR2lvdmVkw6wgNyBNYWdnaW8gMjAyMCkgCiAgICBkYXRlQnVpbGRlcjogZnVuY3Rpb24gZGF0ZUJ1aWxkZXIoKSB7CiAgICAgIHZhciBkID0gbmV3IERhdGUoKTsKICAgICAgdmFyIG1vbnRocyA9IFsiR2VubmFpbyIsICJGZWJicmFpbyIsICJNYXJ6byIsICJBcHJpbGUiLCAiTWFnZ2lvIiwgIkdpdWdubyIsICJMdWdsaW8iLCAiQWdvc3RvIiwgIlNldHRlbWJyZSIsICJPdHRvYnJlIiwgIk5vdmVtYnJlIiwgIkRpY2VtYnJlIl07CiAgICAgIHZhciBkYXlzID0gWyJEb21lbmljYSIsICJMdW5lZMOsIiwgIk1hcnRlZMOsIiwgIk1lcmNvbGVkw6wiLCAiR2lvdmVkw6wiLCAiVmVuZXJkw6wiLCAiU2FiYXRvIl07CiAgICAgIHZhciBkYXkgPSBkYXlzW2QuZ2V0RGF5KCldOwogICAgICB2YXIgZGF0ZSA9IGQuZ2V0RGF0ZSgpOwogICAgICB2YXIgbW9udGggPSBtb250aHNbZC5nZXRNb250aCgpXTsKICAgICAgdmFyIHllYXIgPSBkLmdldEZ1bGxZZWFyKCk7CiAgICAgIHJldHVybiAiIi5jb25jYXQoZGF5LCAiICIpLmNvbmNhdChkYXRlLCAiICIpLmNvbmNhdChtb250aCwgIiAiKS5jb25jYXQoeWVhcik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,kCADA;AAEA,MAAA,QAAA,EAAA,0CAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAOA,GAVA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA,UAAA,CAAA,CAAA,GAAA,IAAA,OAAA,EAAA;AACA,QAAA,KAAA,WAAA,KAAA,QAAA,uBAAA,KAAA,KAAA,iCAAA,KAAA,OAAA,EAAA,CAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,iBAAA,GAAA,CAAA,IAAA,EAAA;AACA,SAFA,EAEA,IAFA,CAEA,KAAA,UAFA;AAGA;AACA,KAPA;AASA,IAAA,UATA,sBASA,OATA,EASA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,KAXA;AAaA;AACA,IAAA,WAdA,yBAcA;AACA,UAAA,CAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,MAAA,GAAA,CAAA,SAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EACA,WADA,EACA,SADA,EACA,UADA,EACA,UADA,CAAA;AAEA,UAAA,IAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,SAAA,EAAA,SAAA,EAAA,QAAA,CAAA;AAEA,UAAA,GAAA,GAAA,IAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,OAAA,EAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,CAAA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,WAAA,EAAA;AAEA,uBAAA,GAAA,cAAA,IAAA,cAAA,KAAA,cAAA,IAAA;AACA;AA1BA;AAZA,CAAA","sourcesContent":["<template>\n<!--  MyMeteo App: App per il meteo che prende i dati da Openweather.\n    API Key generata da: http://www.openweather.io \n    App by Roberto Romagnoli\n \n -->\n\n<!--  Template dell' App. Cambia lo sfondo a seconda della temperatura:\n    Se la temperatura è inferiore a 16 gradi, lo sfondo è \"cold\", se supera i 16 gradi\n    diventa \"warm\".\n-->\n  <div id=\"app\" :class=\"typeof weather.main != 'undefined' && weather.main.temp > 16 ? \n  'warm' : '' \">\n    <main>\n\n<!--    Barra di ricerca della Città  (non geolocalizzata) -->\n      <div class=\"search-box\">\n        <input \n          type=\"text\" \n          class=\"search-bar\" \n          placeholder=\"Città...\"\n          v-model=\"query\"\n          @keypress=\"fetchWeather\"\n          />\n      </div>\n\n<!--    Informazioni sulla città (Città, Sigla dello stato, ad esempio: Roma, IT) -->\n      <div class=\"weather-wrap\" v-if=\"typeof weather.main != 'undefined'\">\n        <div class=\"location-box\">\n          <div class=\"location\">{{ weather.name }}, {{ weather.sys.country }}</div>\n          <div class=\"date\">{{ dateBuilder() }}</div>        \n        </div>\n\n<!--      Indicazione della temperatura attuale (in gradi Celsius) e delle condizioni atmosferiche -->\n        <div class=\"weather-box\">\n          <div class=\"temp\">{{ Math.round(weather.main.temp) }}°C</div>\n          <div class=\"weather\">{{ weather.weather[0].main }}</div> \n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<!-- App -->\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      api_key: '402f32e04936df00ba5194cda1d9dfa7',\n      url_base: 'https://api.openweathermap.org/data/2.5/',\n      query: '',\n      weather:  {}\n\n    }\n  },\n\n  methods: {\n    fetchWeather (e) {\n      if(e.key == \"Enter\") {\n        fetch(`${this.url_base}weather?q=${this.query}&units=metric&APPID=${this.api_key}`).then(res => {\n            return res.json();\n          }).then(this.setResults);\n      }\n    },\n\n    setResults(results) {\n      this.weather = results;\n    },\n\n    // Costruisce la data nel formato \"Giorno n. Mese Anno\" (Esempio: Giovedì 7 Maggio 2020) \n    dateBuilder() {\n      let d = new Date();\n      let months = [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\",\n      \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"];\n      let days = [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"];\n\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n\n      return `${day} ${date} ${month} ${year}`;\n    }\n  }\n\n}\n</script>\n\n<!-- Stile grafico dell'app -->\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n\n}\n\nbody {\n  font-family: 'montserrat', sans-serif;\n\n}\n\n#app {\n  background-image: url('../img/cold.jpeg');\n  background-size: cover;\n  background-position: bottom;\n  transition: 0.4s;\n}\n\n#app.warm {\n  background-image: url('../img/warm.jpeg');\n}\n\nmain {\n  min-height: 100vh;\n  padding: 25px;\n\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.75));\n}\n\n.search-box .search-bar {\n  display: block;\n  width: 100%;\n  padding: 15px;\n\n  color: #313131;\n  font-size: 20px;\n\n  appearance: none;\n  border: none;\n  outline: none;\n  background: none;\n\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);\n  background-color: rgba(255, 255, 255, 0.5);\n  border-radius: 0px 16px 0px 16px;\n  transition: 0.4s;\n}\n\n.search-box .search-bar:focus {\n    box-shadow: 0px 0px 16px rgba(0, 0, 0, 0.25);\n    background-color: rgba(255, 255, 255, 0.75);\n    border-radius: 16px 0px 16px 0px;\n}\n\n.location-box .date {\n  color: #FFF;\n  font-size: 20px;\n  font-weight: 300;\n  font-style: italic;\n  text-align: center;\n}\n\n.weather-box {\n  text-align: center;\n}\n\n.weather-box .temp {\n  display: inline-block;\n  padding: 10px 25px;\n  color: #FFF;\n  font-size: 102px;\n  font-weight: 900;\n\n  text-shadow: 3px 6px rgba(0,0,0,0.25);\n  background-color: rgba(255, 255, 255, 0.25);\n  margin: 30px 0px;\n\n  box-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n\n.weather-box .weather {\n  color: #FFF;\n  font-size: 48px;\n  font-weight: 700;\n  font-style: italic;\n  text-shadow: 3px 6px rgba(0, 0, 0, 0.25);\n}\n</style>\n"],"sourceRoot":"src"}]}